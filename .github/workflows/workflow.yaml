# cicd process for deployment
name: Deploy cicd
on:
  push:
    branches:
    - cicd

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

    - name: Checkout source code
      uses: actions/checkout@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AMC_AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AMC_AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Get timestamp
      uses: gerred/actions/current-time@master
      id: current-time

    - name: Run string replace
      uses: frabert/replace-string-action@master
      id: format-time
      with:
        pattern: '[:\.]+'
        string: "${{ steps.current-time.outputs.time }}"
        replace-with: '-'
        flags: 'g'

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: amcpanel
        IMAGE_TAG: "amcpanel-${{ steps.format-time.outputs.replaced }}"
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

    - name: Generate deployment package
      run: zip -r deploy.zip Dockerrun.aws.json
    

    - name: Deploy to EB
      uses: einaregilsson/beanstalk-deploy@v20
      with:
        aws_access_key: ${{ secrets.AMC_AWS_ACCESS_KEY_ID }}
        aws_secret_key: ${{ secrets.AMC_AWS_SECRET_ACCESS_KEY }}
        application_name: amcpanel
        environment_name: amcpanel-dev
        version_label: "amcpanel-${{ steps.format-time.outputs.replaced }}"
        region: us-east-1
        deployment_package: deploy.zip